The Makefile in this directory works under linux and Windows (with cygwin).
Note that under Windows, dependencies are broken, necessitating a
"make clean" to force rebuilds after changing header files.  See the note
in the Makefile just before the "-include $(DEPS)" line for explanation. 
The prerequisites are:

1. The avr32-gnu toolchain.  For linux this is assumed to be located in
~/avrtools/avr32-gnu-toolchain-linux_x86_64/; for Windows it is assumed to
be in c:\Program Files (x86)\Atmel\AVR Tools\AVR Toolchain.  The location
can be overridden with the variable AVR32_TOOLCHAIN_DIR.  The linux version
of the toolchain is available for download at
http://www.atmel.com/tools/atmelavrtoolchainforlinux.aspx.  There is also
a copy of the archive for linux_x86_64 in the google drive for
allan@hashfast.com under "Atmel Tools".

2. The avr headers.  These are assumed to be located in
~/avrtools/atmel-headers-6.1.3.1475.  The location can be overridden with
the variable AVR32_HEADERS_DIR.  The headers are available for download
at http://www.atmel.com/tools/atmelavrtoolchainforlinux.aspx.  There is
also a copy of the archive in the google drive for allan@hashfast.com
under "Atmel Tools".

3. srec_cat.  This is part of the "srecord" tools which should be available
as a package for whichever system you're using.  It is assumed to be in your
path.

4. dfu-programmer.  This should also be available as a package.  It is
assumed to be in you path.  This is only needed if the "program" target
is used.

5. createupdate and hfupdate.  These are from the hashfast tools
repository and are assumed to be in ../../../../tools/utils.  The
location can be overridden with the variable HF_TOOLS_DIR.  These are
only needed if the "programhf" target is used.


The makefile has four main targets.  The default, "all", builds all; the
final output is uc3_loader_dfu_update.hex.  "program" programs the image
into flash using dfu, for modules that have the Atmel DFU loader.
"programhf" programs the image into flash using hfupdate; that is to be
used if the module is already running the hashfast custom loader.  "clean"
removes all of the generated files.


